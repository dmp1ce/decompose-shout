# Include common processes
source $(_decompose-project-root)/.decompose/environment/lib/web/processes
source $(_decompose-project-root)/.decompose/environment/lib/common/processes
source $(_decompose-project-root)/.decompose/environment/lib/docker/processes
source $(_decompose-project-root)/processes

# Declare processes
DECOMPOSE_PROCESSES+=( 'build' 'up' 'lounge' 'bash'
  "${DECOMPOSE_WEB_PROCESSES[@]}" "${DECOMPOSE_COMMON_PROCESSES[@]}"
  "${DECOMPOSE_DOCKER_PROCESSES[@]}" )

_decompose-process-build() {
  _decompose-process-common-build
  _decompose-process_nginx_proxy_build
  _decompose-process-build_version_file
  _decompose-process-docker-build
}
_decompose-process-build_help() {
  echo "  Build lounge server"
}

_decompose-process-up() {
  _decompose-process-docker-up
  _decompose-process_nginx_proxy_up
}
_decompose-process-up_help() {
  echo "  Bring lounge server up"
}

_decompose-process-lounge() {
  local cid=$(docker-compose ps -q lounge)
  local status=$(docker inspect -f {{.State.Status}} $cid)

  if [ "$status" = "running" ]; then
    docker exec -it $cid thelounge $@
  else
    docker-compose run --entrypoint="lounge" --rm thelounge $@
  fi
}
_decompose-process-lounge_help() {
  echo "  Run lounge command with parameters."
}

_decompose-process-bash() {
  local cid=$(docker-compose ps -q lounge)
  local status=$(docker inspect -f {{.State.Status}} $cid)

  if [ "$status" = "running" ]; then
    docker exec -it $cid bash
  else
    docker-compose run --entrypoint="bash"  --rm lounge
  fi
}
_decompose-process-bash_help() {
  echo "  Run bash in a copy of the lounge container."
}

# vim:syntax=sh
