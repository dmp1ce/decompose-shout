# Include common processes
source $(_decompose-project-root)/.decompose/environment/lib/web/processes
source $(_decompose-project-root)/.decompose/environment/lib/common/processes
source $(_decompose-project-root)/.decompose/environment/lib/docker/processes
source $(_decompose-project-root)/processes

# Declare processes
DECOMPOSE_PROCESSES+=( 'build' 'up' 'shout' 'bash'
  "${DECOMPOSE_WEB_PROCESSES[@]}" "${DECOMPOSE_COMMON_PROCESSES[@]}"
  "${DECOMPOSE_DOCKER_PROCESSES[@]}" )

_decompose-process-build() {
  _decompose-process-common-build
  _decompose-process_nginx_proxy_build
  _decompose-process-build_version_file
  _decompose-process-docker-build

  # Make volume writable
  docker-compose run --rm -u root lounge chown lounge: /home/lounge
}
_decompose-process-build_help() {
  echo "  Build shout server"
}

_decompose-process-up() {
  _decompose-process-docker-up
  _decompose-process_nginx_proxy_up
}
_decompose-process-up_help() {
  echo "  Bring shout server up"
}

_decompose-process-shout() {
  local cid=$(docker-compose ps -q shout)
  local status=$(docker inspect -f {{.State.Status}} $cid)

  if [ "$status" = "running" ]; then
    docker exec -it $cid shout --home /shout $@
  else
    docker-compose run --entrypoint="shout" --rm shout --home /shout $@
  fi
}
_decompose-process-shout_help() {
  echo "  Run shout command with parameters."
}

_decompose-process-bash() {
  local cid=$(docker-compose ps -q shout)
  local status=$(docker inspect -f {{.State.Status}} $cid)

  if [ "$status" = "running" ]; then
    docker exec -it $cid bash
  else
    docker-compose run --entrypoint="bash"  --rm shout
  fi
}
_decompose-process-shout_help() {
  echo "  Run bash in a copy of the shout container."
}

# vim:syntax=sh
